/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BasicDutchAuction,
  BasicDutchAuctionInterface,
} from "../../NFTDutchAuction.sol/BasicDutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "auctionEnd",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBlocksAuctionOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerPriceDecrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161089138038061089183398181016040528101906100329190610102565b60008060006101000a81548160ff021916908315150217905550826001819055508160028190555080600381905550808261006d9190610184565b8361007891906101c6565b60048190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101fa565b600080fd5b6000819050919050565b6100df816100cc565b81146100ea57600080fd5b50565b6000815190506100fc816100d6565b92915050565b60008060006060848603121561011b5761011a6100c7565b5b6000610129868287016100ed565b935050602061013a868287016100ed565b925050604061014b868287016100ed565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061018f826100cc565b915061019a836100cc565b92508282026101a8816100cc565b915082820484148315176101bf576101be610155565b5b5092915050565b60006101d1826100cc565b91506101dc836100cc565b92508282019050808211156101f4576101f3610155565b5b92915050565b610688806102096000396000f3fe6080604052600436106100705760003560e01c80633103ea621161004e5780633103ea62146100e9578063d3642a8814610114578063db2e1eed1461013f578063f7260d3e1461016a57610070565b80631998aeef146100755780631d0806ae146100935780632a24f46c146100be575b600080fd5b61007d610195565b60405161008a91906103ad565b60405180910390f35b34801561009f57600080fd5b506100a861031d565b6040516100b591906103e1565b60405180910390f35b3480156100ca57600080fd5b506100d3610323565b6040516100e09190610417565b60405180910390f35b3480156100f557600080fd5b506100fe610334565b60405161010b91906103e1565b60405180910390f35b34801561012057600080fd5b5061012961033a565b60405161013691906103e1565b60405180910390f35b34801561014b57600080fd5b50610154610340565b60405161016191906103e1565b60405180910390f35b34801561017657600080fd5b5061017f610346565b60405161018c91906103ad565b60405180910390f35b60008060009054906101000a900460ff16156101e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dd9061048f565b60405180910390fd5b600254431161022a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610221906104fb565b60405180910390fd5b60025443610238919061054a565b600354610245919061057e565b600454610252919061054a565b3411610293576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028a90610632565b60405180910390fd5b60016000806101000a81548160ff021916908315150217905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610315573d6000803e3d6000fd5b506000905090565b60045481565b60008054906101000a900460ff1681565b60025481565b60035481565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103978261036c565b9050919050565b6103a78161038c565b82525050565b60006020820190506103c2600083018461039e565b92915050565b6000819050919050565b6103db816103c8565b82525050565b60006020820190506103f660008301846103d2565b92915050565b60008115159050919050565b610411816103fc565b82525050565b600060208201905061042c6000830184610408565b92915050565b600082825260208201905092915050565b7f5468652061756374696f6e20616c726561647920656e6465642e000000000000600082015250565b6000610479601a83610432565b915061048482610443565b602082019050919050565b600060208201905081810360008301526104a88161046c565b9050919050565b7f5468652061756374696f6e206861736e27742073746172746564207965740000600082015250565b60006104e5601e83610432565b91506104f0826104af565b602082019050919050565b60006020820190508181036000830152610514816104d8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610555826103c8565b9150610560836103c8565b92508282039050818111156105785761057761051b565b5b92915050565b6000610589826103c8565b9150610594836103c8565b92508282026105a2816103c8565b915082820484148315176105b9576105b861051b565b5b5092915050565b7f596f757220626964206973206c6f776572207468616e20746865206d696e696d60008201527f756d206269640000000000000000000000000000000000000000000000000000602082015250565b600061061c602683610432565b9150610627826105c0565b604082019050919050565b6000602082019050818103600083015261064b8161060f565b905091905056fea264697066735822122074c0fde4bd513b6c84d181ae31fbddfcc1380652be3bf2d193a83414d5349b1b64736f6c63430008110033";

type BasicDutchAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicDutchAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicDutchAuction__factory extends ContractFactory {
  constructor(...args: BasicDutchAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicDutchAuction> {
    return super.deploy(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<BasicDutchAuction>;
  }
  override getDeployTransaction(
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): BasicDutchAuction {
    return super.attach(address) as BasicDutchAuction;
  }
  override connect(signer: Signer): BasicDutchAuction__factory {
    return super.connect(signer) as BasicDutchAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicDutchAuctionInterface {
    return new utils.Interface(_abi) as BasicDutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicDutchAuction {
    return new Contract(address, _abi, signerOrProvider) as BasicDutchAuction;
  }
}
