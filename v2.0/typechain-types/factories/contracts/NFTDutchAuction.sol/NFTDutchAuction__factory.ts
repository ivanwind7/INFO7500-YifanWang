/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTDutchAuction,
  NFTDutchAuctionInterface,
} from "../../../contracts/NFTDutchAuction.sol/NFTDutchAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc721TokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reservePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numBlocksAuctionOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_offerPriceDecrement",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "auctionEnd",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "contract myNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numBlocksAuctionOpen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerPriceDecrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c3038038062000c30833981810160405281019062000037919062000201565b60008060006101000a81548160ff02191690831515021790555033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836002819055508260038190555081600481905550806005819055508082620000fd9190620002b8565b836200010a919062000303565b60068190555084600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050506200033e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200018e8262000161565b9050919050565b620001a08162000181565b8114620001ac57600080fd5b50565b600081519050620001c08162000195565b92915050565b6000819050919050565b620001db81620001c6565b8114620001e757600080fd5b50565b600081519050620001fb81620001d0565b92915050565b600080600080600060a0868803121562000220576200021f6200015c565b5b60006200023088828901620001af565b95505060206200024388828901620001ea565b94505060406200025688828901620001ea565b93505060606200026988828901620001ea565b92505060806200027c88828901620001ea565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620002c582620001c6565b9150620002d283620001c6565b9250828202620002e281620001c6565b91508282048414831517620002fc57620002fb62000289565b5b5092915050565b60006200031082620001c6565b91506200031d83620001c6565b925082820190508082111562000338576200033762000289565b5b92915050565b6108e2806200034e6000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b146101605780639d76ea581461018b578063d3642a88146101b6578063d56d229d146101e1578063db2e1eed1461020c57610091565b80631998aeef146100965780631d0806ae146100b45780632a24f46c146100df5780633103ea621461010a5780637e83057414610135575b600080fd5b61009e610237565b6040516100ab9190610556565b60405180910390f35b3480156100c057600080fd5b506100c9610474565b6040516100d6919061058a565b60405180910390f35b3480156100eb57600080fd5b506100f461047a565b60405161010191906105c0565b60405180910390f35b34801561011657600080fd5b5061011f61048b565b60405161012c919061058a565b60405180910390f35b34801561014157600080fd5b5061014a610491565b604051610157919061058a565b60405180910390f35b34801561016c57600080fd5b50610175610497565b6040516101829190610556565b60405180910390f35b34801561019757600080fd5b506101a06104bd565b6040516101ad9190610556565b60405180910390f35b3480156101c257600080fd5b506101cb6104e3565b6040516101d8919061058a565b60405180910390f35b3480156101ed57600080fd5b506101f66104e9565b604051610203919061063a565b60405180910390f35b34801561021857600080fd5b5061022161050f565b60405161022e919061058a565b60405180910390f35b60008060009054906101000a900460ff1615610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f906106b2565b60405180910390fd5b60045443116102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c39061071e565b60405180910390fd5b600454436102da919061076d565b6005546102e791906107a1565b6006546102f4919061076d565b3411610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032c90610855565b60405180910390fd5b60016000806101000a81548160ff021916908315150217905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336002546040518463ffffffff1660e01b81526004016103d293929190610875565b600060405180830381600087803b1580156103ec57600080fd5b505af1158015610400573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561046c573d6000803e3d6000fd5b506000905090565b60065481565b60008054906101000a900460ff1681565b60045481565b60025481565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054082610515565b9050919050565b61055081610535565b82525050565b600060208201905061056b6000830184610547565b92915050565b6000819050919050565b61058481610571565b82525050565b600060208201905061059f600083018461057b565b92915050565b60008115159050919050565b6105ba816105a5565b82525050565b60006020820190506105d560008301846105b1565b92915050565b6000819050919050565b60006106006105fb6105f684610515565b6105db565b610515565b9050919050565b6000610612826105e5565b9050919050565b600061062482610607565b9050919050565b61063481610619565b82525050565b600060208201905061064f600083018461062b565b92915050565b600082825260208201905092915050565b7f5468652061756374696f6e20616c726561647920656e6465642e000000000000600082015250565b600061069c601a83610655565b91506106a782610666565b602082019050919050565b600060208201905081810360008301526106cb8161068f565b9050919050565b7f5468652061756374696f6e206861736e27742073746172746564207965740000600082015250565b6000610708601e83610655565b9150610713826106d2565b602082019050919050565b60006020820190508181036000830152610737816106fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061077882610571565b915061078383610571565b925082820390508181111561079b5761079a61073e565b5b92915050565b60006107ac82610571565b91506107b783610571565b92508282026107c581610571565b915082820484148315176107dc576107db61073e565b5b5092915050565b7f596f757220626964206973206c6f776572207468616e20746865206d696e696d60008201527f756d206269640000000000000000000000000000000000000000000000000000602082015250565b600061083f602683610655565b915061084a826107e3565b604082019050919050565b6000602082019050818103600083015261086e81610832565b9050919050565b600060608201905061088a6000830186610547565b6108976020830185610547565b6108a4604083018461057b565b94935050505056fea2646970667358221220a4a57a2057fcb252f82d08bad751d9642e88c736cbce11a3d0b346182089587864736f6c63430008110033";

type NFTDutchAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTDutchAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTDutchAuction__factory extends ContractFactory {
  constructor(...args: NFTDutchAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTDutchAuction> {
    return super.deploy(
      erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    ) as Promise<NFTDutchAuction>;
  }
  override getDeployTransaction(
    erc721TokenAddress: PromiseOrValue<string>,
    _nftTokenId: PromiseOrValue<BigNumberish>,
    _reservePrice: PromiseOrValue<BigNumberish>,
    _numBlocksAuctionOpen: PromiseOrValue<BigNumberish>,
    _offerPriceDecrement: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      erc721TokenAddress,
      _nftTokenId,
      _reservePrice,
      _numBlocksAuctionOpen,
      _offerPriceDecrement,
      overrides || {}
    );
  }
  override attach(address: string): NFTDutchAuction {
    return super.attach(address) as NFTDutchAuction;
  }
  override connect(signer: Signer): NFTDutchAuction__factory {
    return super.connect(signer) as NFTDutchAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTDutchAuctionInterface {
    return new utils.Interface(_abi) as NFTDutchAuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTDutchAuction {
    return new Contract(address, _abi, signerOrProvider) as NFTDutchAuction;
  }
}
